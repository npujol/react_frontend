/*
 * My stories API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.16
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from './ApiClient';
import {Comment} from './model/Comment';
import {InlineResponse200} from './model/InlineResponse200';
import {InlineResponse2001} from './model/InlineResponse2001';
import {InlineResponse2002} from './model/InlineResponse2002';
import {InlineResponse2003} from './model/InlineResponse2003';
import {Login} from './model/Login';
import {Notification} from './model/Notification';
import {Profile} from './model/Profile';
import {ProfileImage} from './model/ProfileImage';
import {Registration} from './model/Registration';
import {Speech} from './model/Speech';
import {Story} from './model/Story';
import {StoryImage} from './model/StoryImage';
import {StoryPrivate} from './model/StoryPrivate';
import {Tag} from './model/Tag';
import {User} from './model/User';
import {AuthApi} from './api/AuthApi';
import {NotificationsApi} from './api/NotificationsApi';
import {ProfilesApi} from './api/ProfilesApi';
import {StoriesApi} from './api/StoriesApi';
import {TagsApi} from './api/TagsApi';
import {UsersApi} from './api/UsersApi';


/**
* ERROR_UNKNOWN.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MyStoriesApi = require('index'); // See note below*.
* var xxxSvc = new MyStoriesApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MyStoriesApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MyStoriesApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MyStoriesApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003,

    /**
     * The Login model constructor.
     * @property {module:model/Login}
     */
    Login,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The Profile model constructor.
     * @property {module:model/Profile}
     */
    Profile,

    /**
     * The ProfileImage model constructor.
     * @property {module:model/ProfileImage}
     */
    ProfileImage,

    /**
     * The Registration model constructor.
     * @property {module:model/Registration}
     */
    Registration,

    /**
     * The Speech model constructor.
     * @property {module:model/Speech}
     */
    Speech,

    /**
     * The Story model constructor.
     * @property {module:model/Story}
     */
    Story,

    /**
     * The StoryImage model constructor.
     * @property {module:model/StoryImage}
     */
    StoryImage,

    /**
     * The StoryPrivate model constructor.
     * @property {module:model/StoryPrivate}
     */
    StoryPrivate,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The ProfilesApi service constructor.
    * @property {module:api/ProfilesApi}
    */
    ProfilesApi,

    /**
    * The StoriesApi service constructor.
    * @property {module:api/StoriesApi}
    */
    StoriesApi,

    /**
    * The TagsApi service constructor.
    * @property {module:api/TagsApi}
    */
    TagsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
